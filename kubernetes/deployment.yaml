apiVersion: apps/v1
kind: Deployment
metadata:
  name: school-management-app
  namespace: school-management
  labels:
    app: school-management
spec:
  replicas: 2
  selector:
    matchLabels:
      app: school-management
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: school-management
    spec:
      containers:
      - name: school-management-app
        image: docker.io/yourusername/laravel-school-management:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 80
        resources:
          limits:
            cpu: "1"
            memory: "512Mi"
          requests:
            cpu: "0.5"
            memory: "256Mi"
        env:
        - name: APP_NAME
          value: "School Management System"
        - name: APP_ENV
          value: "production"
        - name: APP_DEBUG
          value: "false"
        - name: APP_URL
          value: "https://school.example.com"
        - name: LOG_CHANNEL
          value: "stack"
        - name: DB_CONNECTION
          value: "mysql"
        - name: DB_HOST
          valueFrom:
            configMapKeyRef:
              name: school-management-config
              key: db_host
        - name: DB_PORT
          valueFrom:
            configMapKeyRef:
              name: school-management-config
              key: db_port
        - name: DB_DATABASE
          valueFrom:
            configMapKeyRef:
              name: school-management-config
              key: db_database
        - name: DB_USERNAME
          valueFrom:
            secretKeyRef:
              name: school-management-secrets
              key: db_username
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: school-management-secrets
              key: db_password
        - name: CACHE_DRIVER
          value: "redis"
        - name: REDIS_HOST
          valueFrom:
            configMapKeyRef:
              name: school-management-config
              key: redis_host
        - name: QUEUE_CONNECTION
          value: "redis"
        livenessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 10
          periodSeconds: 5
        volumeMounts:
        - name: app-storage
          mountPath: /var/www/html/storage
      volumes:
      - name: app-storage
        persistentVolumeClaim:
          claimName: school-management-storage-pvc
      imagePullSecrets:
      - name: registry-credentials
